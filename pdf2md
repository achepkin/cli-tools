#!/usr/bin/env python3
"""
PDF to Markdown converter using PyMuPDF4LLM
"""
import argparse
import os
import sys
import subprocess
import venv
from pathlib import Path

def setup_venv():
    """Setup and activate virtual environment"""
    venv_dir = Path.home() / '.local' / 'venvs' / 'pdf-tools'
    
    # Create venv if it doesn't exist
    if not venv_dir.exists():
        print("Setting up virtual environment...")
        venv.create(venv_dir, with_pip=True)

    # Get paths
    if sys.platform == 'win32':
        python_path = venv_dir / 'Scripts' / 'python.exe'
        pip_path = venv_dir / 'Scripts' / 'pip.exe'
    else:
        python_path = venv_dir / 'bin' / 'python'
        pip_path = venv_dir / 'bin' / 'pip'

    # Install package if needed
    try:
        subprocess.check_call([str(pip_path), 'install', 'pymupdf4llm'])
    except subprocess.CalledProcessError as e:
        print(f"Error installing package: {e}")
        sys.exit(1)

    # Re-run script with venv python
    if not os.environ.get('VENV_RUNNING'):
        os.environ['VENV_RUNNING'] = '1'
        os.execv(str(python_path), [str(python_path), __file__] + sys.argv[1:])

def convert_pdf_to_md(pdf_path, output_path=None):
    """Convert PDF to Markdown format using PyMuPDF4LLM"""
    try:
        import pymupdf4llm
    except ImportError:
        setup_venv()
        import pymupdf4llm
    
    try:
        print(f"Converting {pdf_path} to Markdown...")
        
        # Convert to markdown
        md_text = pymupdf4llm.to_markdown(pdf_path)
        
        # Determine output path
        if output_path is None:
            output_path = os.path.splitext(pdf_path)[0] + '.md'
            
        # Write markdown to file
        with open(output_path, 'w', encoding='utf-8') as f:
            f.write(md_text)
            
        print(f"Conversion complete! Output saved to: {output_path}")
        return True

    except Exception as e:
        print(f"Error converting PDF: {str(e)}")
        return False

def main():
    parser = argparse.ArgumentParser(description='Convert PDF to Markdown using PyMuPDF4LLM')
    parser.add_argument('pdf_path', help='Path to the PDF file')
    parser.add_argument('-o', '--output', help='Output markdown file path (optional)')
    
    args = parser.parse_args()

    if not os.path.exists(args.pdf_path):
        print(f"Error: File not found: {args.pdf_path}")
        return

    # Convert the PDF
    convert_pdf_to_md(args.pdf_path, args.output)

if __name__ == '__main__':
    main() 